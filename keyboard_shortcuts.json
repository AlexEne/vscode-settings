// Place your key bindings in this file to override the defaults
[
    {
        "key": "f7",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+e",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+f2",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "f2",
        "command": "bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    // {
    //     "key": "Enter",
    //     "command": "rust-analyzer.onEnter",
    //     "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == rust"
    // },
    {
        "key": "alt+pagedown", // or whatever binding you choose
        "command": "cursorMove",
        "args": {
            "to": "viewPortCenter"
        }
    },
    {
        "key": "alt+pagedown",
        "command": "-scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+pageup", // or whatever binding you choose
        "command": "cursorMove",
        "args": {
            "to": "viewPortCenter"
        }
    },
    {
        "key": "alt+pageup",
        "command": "-scrollPageup",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt",
        "command": "rust-analyzer.toggleInlayHints"
    },
    {
        "key": "capslock",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "shift+tab",
        "command": "-extension.vim_shift+tab",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+[",
        "command": "-extension.vim_ctrl+[",
        "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"
    },
    {
        "key": "ctrl+]",
        "command": "-extension.vim_ctrl+]",
        "when": "editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"
    },
    {
        "key": "ctrl+c",
        "command": "-extension.vim_ctrl+c",
        "when": "editorTextFocus && vim.active && vim.overrideCtrlC && vim.use<C-c> && !inDebugRepl"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+z",
        "command": "-extension.vim_ctrl+z",
        "when": "editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"
    },
    {
        "key": "ctrl+u",
        "command": "-extension.vim_ctrl+u",
        "when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    }
]
